diff -Naur gnome-do-0.8.5.orig/configure.ac gnome-do-0.8.5/configure.ac
--- gnome-do-0.8.5.orig/configure.ac	2011-05-22 12:14:55.000000000 +0200
+++ gnome-do-0.8.5/configure.ac	2012-02-27 20:51:57.790976917 +0100
@@ -60,10 +60,21 @@
 PKG_CHECK_MODULES([GCONF_SHARP_20], [gconf-sharp-2.0])
 PKG_CHECK_MODULES([GLADE_SHARP_20], [glade-sharp-2.0])
 PKG_CHECK_MODULES([GLIB_SHARP_20], [glib-sharp-2.0])
+
+dnl gio-sharp is an unstable api library
+PKG_CHECK_MODULES([GIO_SHARP], [gio-sharp-2.0])
+files="`$PKG_CONFIG --variable=Libraries gio-sharp-2.0`"
+for file in $files; do
+	[ mkdir -p $top_srcdir/build ] && [ cp -vu $file $top_srcdir/build/ ]
+	GIO_SHARP_ASSEMBLIES="$GIO_SHARP_ASSEMBLIES $top_srcdir/build/$(basename $file)"
+	GIO_SHARP_LIBS="$GIO_SHARP_LIBS -r:$top_srcdir/build/$(basename $file)"
+	[[ -r "$file.config" ]] && [ mkdir -p $top_srcdir/build ] && [ cp -vu $file.config $top_srcdir/build/ ]
+	[[ -r "$file.config" ]] && GIO_SHARP_ASSEMBLIES="$GIO_SHARP_ASSEMBLIES $top_srcdir/build/$(basename $file).config"
+done
+AC_SUBST([GIO_SHARP_ASSEMBLIES])
+
 PKG_CHECK_MODULES([GNOME_DESKTOP_SHARP_20], [gnome-desktop-sharp-2.0])
 PKG_CHECK_MODULES([GNOME_KEYRING_SHARP], [gnome-keyring-sharp-1.0])
-PKG_CHECK_MODULES([GNOME_SHARP_20], [gnome-sharp-2.0])
-PKG_CHECK_MODULES([GNOME_VFS_SHARP_20], [gnome-vfs-sharp-2.0])
 PKG_CHECK_MODULES([GTK_SHARP_20], [gtk-sharp-2.0])
 PKG_CHECK_MODULES([LIBRSVG_SHARP], [rsvg2-sharp-2.0])
 PKG_CHECK_MODULES([MONO_ADDINS], [mono-addins])
diff -Naur gnome-do-0.8.5.orig/Do.Platform.Linux/Makefile.am gnome-do-0.8.5/Do.Platform.Linux/Makefile.am
--- gnome-do-0.8.5.orig/Do.Platform.Linux/Makefile.am	2009-08-20 12:19:16.000000000 +0200
+++ gnome-do-0.8.5/Do.Platform.Linux/Makefile.am	2012-02-27 20:51:57.797643166 +0100
@@ -54,7 +54,7 @@
 	Mono.Posix \
 	$(GTK_SHARP_20_LIBS) \
 	$(GNOME_KEYRING_SHARP_LIBS) \
-	$(GNOME_SHARP_20_LIBS) \
+	$(GIO_SHARP_LIBS) \
 	$(GNOME_DESKTOP_SHARP_20_LIBS) \
 	$(GCONF_SHARP_20_LIBS) \
 	$(MONO_ADDINS_LIBS) \
diff -Naur gnome-do-0.8.5.orig/Do.Platform.Linux/src/Do.Platform/Do.Platform.Linux/SystemService.cs gnome-do-0.8.5/Do.Platform.Linux/src/Do.Platform/Do.Platform.Linux/SystemService.cs
--- gnome-do-0.8.5.orig/Do.Platform.Linux/src/Do.Platform/Do.Platform.Linux/SystemService.cs	2010-12-04 10:35:28.000000000 +0100
+++ gnome-do-0.8.5/Do.Platform.Linux/src/Do.Platform/Do.Platform.Linux/SystemService.cs	2012-02-27 20:51:57.797643166 +0100
@@ -162,7 +162,8 @@
 		
 		string AutoStartUri {
 			get {
-				return Gnome.Vfs.Uri.GetUriFromLocalPath (AutoStartFileName);
+				var uri = new Uri(AutoStartFileName).ToString();
+				return uri;
 			}
 		}
 		
diff -Naur gnome-do-0.8.5.orig/Do.Platform.Linux/src/Do.Universe/FileItem.cs gnome-do-0.8.5/Do.Platform.Linux/src/Do.Universe/FileItem.cs
--- gnome-do-0.8.5.orig/Do.Platform.Linux/src/Do.Universe/FileItem.cs	2009-08-20 12:19:16.000000000 +0200
+++ gnome-do-0.8.5/Do.Platform.Linux/src/Do.Universe/FileItem.cs	2012-02-27 20:51:57.804309419 +0100
@@ -22,7 +22,6 @@
 using System.Collections.Generic;
 using SpecialFolder = System.Environment.SpecialFolder;
 
-using Gnome;
 using Mono.Unix;
 
 using Do.Platform;
@@ -63,8 +62,6 @@
 
 		static FileItem ()
 		{
-			Gnome.Vfs.Vfs.Initialize ();
-
 			// Initialize SpecialFolderIcons by expanding paths in
 			// SpecialFolderIconsXDG.
 			//
@@ -130,7 +127,16 @@
 		}
 
 		public string MimeType {
-			get { return Gnome.Vfs.Global.GetMimeType (Path); }
+			get {
+				GLib.File file;
+				if (Path.StartsWith("file://")) {
+					file = GLib.FileFactory.NewForUri(Path);
+				} else {
+					file = GLib.FileFactory.NewForPath(Path);
+				}
+				var info = file.QueryInfo ("standard::content-type", GLib.FileQueryInfoFlags.None, null);
+				return info.ContentType;
+			}
 		}
 
 		public override string Icon {
@@ -142,29 +143,20 @@
 				icon = MaybeGetSpecialFolderIconForPath (Path);
 				if (icon != null) return icon;
 
-				string large_thumb = Thumbnail.PathForUri (Uri, ThumbnailSize.Large);
-				string normal_thumb = Thumbnail.PathForUri (Uri, ThumbnailSize.Normal);
-
 				// Generating the thumbnail ourself is too slow for large files.
 				// Suggestion: generate thumbnails asynchronously. Banshee's
 				// notion of job queues may be useful.
-				if (IO.File.Exists (large_thumb)) {
-					icon = large_thumb;	
-				} else if (IO.File.Exists (normal_thumb)) {
-					icon = normal_thumb;	
-				} else {
-					try {
-						if (MimeType == "x-directory/normal") {
-							icon = "folder";
-						} else if (MimeType.StartsWith ("image")) {
-							icon = "gnome-mime-image";
-						} else {
-							icon = MimeType.Replace ('/', '-');
-							icon = string.Format ("gnome-mime-{0}", icon);
-						}
-					} catch (NullReferenceException) {
-						icon = "gtk-file";
+				try {
+					if (MimeType == "x-directory/normal") {
+						icon = "folder";
+					} else if (MimeType.StartsWith ("image")) {
+						icon = "gnome-mime-image";
+					} else {
+						icon = MimeType.Replace ('/', '-');
+						icon = string.Format ("gnome-mime-{0}", icon);
 					}
+				} catch (NullReferenceException) {
+					icon = "gtk-file";
 				}
 				return icon;
 			}
diff -Naur gnome-do-0.8.5.orig/Makefile.am gnome-do-0.8.5/Makefile.am
--- gnome-do-0.8.5.orig/Makefile.am	2010-12-04 12:26:36.000000000 +0100
+++ gnome-do-0.8.5/Makefile.am	2012-02-27 20:52:24.309327094 +0100
@@ -2,6 +2,11 @@
 
 ACLOCAL_AMFLAGS = -I m4 -I m4/shamrock
 
+# Install copied assemblies to our libdir
+copiedlibsdir = $(pkglibdir)
+copiedlibs_DATA = \
+	$(GIO_SHARP_ASSEMBLIES)
+
 SUBDIRS = \
 	. \
 	data \
