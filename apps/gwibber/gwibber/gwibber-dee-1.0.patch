=== modified file 'lens/src/daemon.vala'
--- lens/src/daemon.vala	2011-10-25 18:52:53 +0000
+++ lens/src/daemon.vala	2012-01-10 16:34:32 +0000
@@ -41,7 +41,7 @@
     private Gwibber.Utils utils;
     private Dee.Model? _model;
     private Dee.Model? _streams_model;
-    private Dee.Filter *_sort_filter;
+    private Dee.Filter _sort_filter;
     /* Keep track of the previous search, so we can determine when to
      * filter down the result set instead of rebuilding it */
     private LensSearch? previous_search;
@@ -114,8 +114,8 @@
 
       _streams_model = streams_service.stream_model;
       Intl.setlocale(LocaleCategory.COLLATE, "C");
-      _sort_filter = new Dee.Filter.collator_desc(StreamModelColumn.TIMESTAMP);
-      _model = new Dee.FilterModel (_sort_filter, _streams_model);
+      _sort_filter = Dee.Filter.new_collator_desc (StreamModelColumn.TIMESTAMP);
+      _model = new Dee.FilterModel (_streams_model, _sort_filter);
     }
 
     private void populate_filters ()

=== modified file 'libgwibber-gtk/stream-view.vala'
--- libgwibber-gtk/stream-view.vala	2011-10-22 02:32:35 +0000
+++ libgwibber-gtk/stream-view.vala	2012-01-10 16:34:32 +0000
@@ -55,8 +55,7 @@
 
     private Dee.Model? _model = null;
     private Dee.Model? _stream_filter_model = null;
-    private Dee.Filter *stream_filter;
-    private Dee.Filter *sort_filter;
+    private Dee.Filter sort_filter;
     private int _position = 0;
     private string _stream = "home";
     private int _sort_order = 1;
@@ -94,11 +93,13 @@
       get { return _stream_filter_model; }
       set {
         if (sort_order == 0)
-          sort_filter = new Dee.Filter.collator(StreamModelColumn.TIMESTAMP);
+          sort_filter = Dee.Filter.new_collator (StreamModelColumn.TIMESTAMP);
         else
-          sort_filter = new Dee.Filter.collator_desc(StreamModelColumn.TIMESTAMP);
-        _stream_filter_model = new Dee.FilterModel (sort_filter, model);
-        
+          sort_filter = Dee.Filter.new_collator_desc (StreamModelColumn.TIMESTAMP);
+        Timer timer = new Timer();
+        _stream_filter_model = new Dee.FilterModel (model, sort_filter);
+        debug ("Applied sorting filter in %fms", timer.elapsed()*1000);
+
         refresh ();
         Idle.add (() => {
           adjustment.set_upper ((double)(_stream_filter_model.get_n_rows ()));

=== modified file 'libgwibber/streams.vala'
--- libgwibber/streams.vala	2011-12-08 22:04:59 +0000
+++ libgwibber/streams.vala	2012-01-10 16:34:32 +0000
@@ -167,17 +167,17 @@
             if (stream == "home") {
               return model;
             } else {
-              stream_filter = new Dee.Filter.for_key_column (StreamModelColumn.STREAM, stream);
+              stream_filter = Dee.Filter.new_for_key_column (StreamModelColumn.STREAM, stream);
             }
-            var filtered_model = new Dee.FilterModel (stream_filter, model);
+            var filtered_model = new Dee.FilterModel (model, stream_filter);
             return filtered_model;
         }
 
         public Dee.Model? transient_filter_model (Dee.Model model, string transient)
         {
             Dee.Filter transient_filter;
-            transient_filter = new Dee.Filter.for_key_column (StreamModelColumn.TRANSIENT, transient);
-            var filtered_model = new Dee.FilterModel (transient_filter, model);
+            transient_filter = Dee.Filter.new_for_key_column (StreamModelColumn.TRANSIENT, transient);
+            var filtered_model = new Dee.FilterModel (model, transient_filter);
             return filtered_model;
         }
 
@@ -198,7 +198,10 @@
             {
               debug ("Getting non-transient model");
               Dee.SequenceModel? model = resources.load ("gwibber.stream_model") as Dee.SequenceModel;
-              debug ("stream_model from resources has %u rows", model.get_n_rows ());
+              if (model is Dee.Model)
+                debug ("stream_model from resources has %u rows", model.get_n_rows ());
+              else
+                debug ("stream_model from resources isn't valid");
               if (!(model is Dee.SequenceModel))
               {
                 debug ("Didn't get model from resource manager, creating a new one");

