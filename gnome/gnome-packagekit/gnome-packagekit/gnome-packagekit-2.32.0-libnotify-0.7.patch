From 1efccf17638b2b7e658c54351a5e8492729bfad5 Mon Sep 17 00:00:00 2001
From: William Jon McCann <jmccann@redhat.com>
Date: Mon, 18 Oct 2010 15:47:42 +0000
Subject: Port to libnotify 0.7.0

Signed-off-by: Richard Hughes <richard@hughsie.com>
---
diff --git a/configure.ac b/configure.ac
index 954e03e..eb91b8d 100644
--- a/configure.ac
+++ b/configure.ac
@@ -128,7 +128,7 @@ PKG_CHECK_MODULES(CONTROL_CENTER, [
 DBUS_REQUIRED=1.1.2
 GCONF_REQUIRED=0.22
 DBUS_GLIB_REQUIRED=0.73
-LIBNOTIFY_REQUIRED=0.4.3
+LIBNOTIFY_REQUIRED=0.7.0
 UNIQUE_REQUIRED=1.0.0
 GNOME_MENUS_REQUIRED=2.24.1
 GIO_REQUIRED=2.18.0
diff --git a/src/gpk-check-update.c b/src/gpk-check-update.c
index 7c7237d..1322c04 100644
--- a/src/gpk-check-update.c
+++ b/src/gpk-check-update.c
@@ -398,18 +394,14 @@ gpk_check_update_finished_notify (GpkCheckUpdate *cupdate, PkResults *results)
 	}
 
 	/* TRANSLATORS: title: system update completed all okay */
-	notification = notify_notification_new_with_status_icon (_("The system update has completed"),
-								 message_text->str, "help-browser",
-								 cupdate->priv->status_icon);
+	notification = notify_notification_new (_("The system update has completed"),
+						 message_text->str, NULL);
 	notify_notification_set_timeout (notification, 15000);
 	notify_notification_set_urgency (notification, NOTIFY_URGENCY_LOW);
 	if (restart == PK_RESTART_ENUM_SYSTEM) {
 		notify_notification_add_action (notification, "restart",
 						/* TRANSLATORS: restart computer as system packages need update */
 						_("Restart computer now"), gpk_check_update_libnotify_cb, cupdate, NULL);
-//		notify_notification_add_action (notification, "do-not-show-complete-restart",
-//						/* TRANSLATORS: don't show this option again (for restart) */
-//						_("Do not show this again"), gpk_check_update_libnotify_cb, cupdate, NULL);
 	} else {
 		notify_notification_add_action (notification, "do-not-show-complete",
 						/* TRANSLATORS: don't show this option again (when finished)  */
@@ -466,7 +458,7 @@ gpk_check_update_show_error (GpkCheckUpdate *cupdate, PkError *error_code)
 
 	/* do the bubble */
 	egg_debug ("title=%s, message=%s", title, message);
-	notification = notify_notification_new_with_status_icon (title, message, "help-browser", cupdate->priv->status_icon);
+	notification = notify_notification_new (title, message, NULL);
 	if (notification == NULL) {
 		egg_warning ("failed to get bubble");
 		goto out;
@@ -671,7 +661,7 @@ gpk_check_update_critical_updates_warning (GpkCheckUpdate *cupdate, GPtrArray *a
 
 	/* do the bubble */
 	egg_debug ("title=%s, message=%s", title, message);
-	notification = notify_notification_new_with_status_icon (title, message, "help-browser", cupdate->priv->status_icon);
+	notification = notify_notification_new (title, message, NULL);
 	if (notification == NULL) {
 		egg_warning ("failed to get bubble");
 		return;
@@ -763,9 +753,8 @@ gpk_check_update_check_on_battery (GpkCheckUpdate *cupdate)
 	/* TRANSLATORS: policy says update, but we are on battery and so prompt */
 	message = _("Automatic updates are not being installed as the computer is running on battery power");
 	/* TRANSLATORS: informs user will not install by default */
-	notification = notify_notification_new_with_status_icon (_("Updates not installed"),
-								 message, "help-browser",
-								 cupdate->priv->status_icon);
+	notification = notify_notification_new (_("Updates not installed"),
+						message, NULL);
 	notify_notification_set_timeout (notification, 15000);
 	notify_notification_set_urgency (notification, NOTIFY_URGENCY_LOW);
 //	notify_notification_add_action (notification, "do-not-show-update-not-battery",
@@ -799,10 +788,10 @@ gpk_check_update_notify_doing_updates (GpkCheckUpdate *cupdate)
 		goto out;
 
 	/* TRANSLATORS: title: notification when we scheduled an automatic update */
-	notification = notify_notification_new_with_status_icon (_("Updates are being installed"),
+	notification = notify_notification_new (_("Updates are being installed"),
 						/* TRANSLATORS: tell the user why the hard disk is grinding... */
 						_("Updates are being automatically installed on your computer"),
-						"software-update-urgent", cupdate->priv->status_icon);
+						"software-update-urgent");
 	notify_notification_set_timeout (notification, 15000);
 	notify_notification_set_urgency (notification, NOTIFY_URGENCY_LOW);
 	/* TRANSLATORS: button: cancel the update system */
@@ -1293,7 +1282,7 @@ gpk_check_update_get_distro_upgrades_finished_cb (GObject *object, GAsyncResult
 
 	/* TRANSLATORS: a distro update is available, e.g. Fedora 8 to Fedora 9 */
 	title = _("Distribution upgrades available");
-	notification = notify_notification_new_with_status_icon (title, string->str, "help-browser", cupdate->priv->status_icon);
+	notification = notify_notification_new (title, string->str, NULL);
 	if (notification == NULL) {
 		egg_warning ("failed to make bubble");
 		goto out;
diff --git a/src/gpk-dbus-task.c b/src/gpk-dbus-task.c
index 70ff92c..d3142db 100644
--- a/src/gpk-dbus-task.c
+++ b/src/gpk-dbus-task.c
@@ -380,7 +376,7 @@ gpk_dbus_task_handle_error (GpkDbusTask *dtask, PkError *error_code)
 	dtask->priv->cached_error_code = g_object_ref (error_code);
 
 	/* do the bubble */
-	notification = notify_notification_new (title, message, "help-browser", NULL);
+	notification = notify_notification_new (title, message, NULL);
 	notify_notification_set_timeout (notification, 15000);
 	notify_notification_set_urgency (notification, NOTIFY_URGENCY_LOW);
 	notify_notification_add_action (notification, "show-error-details",
diff --git a/src/gpk-firmware.c b/src/gpk-firmware.c
index d6ba537..a60e5f8 100644
--- a/src/gpk-firmware.c
+++ b/src/gpk-firmware.c
@@ -272,7 +267,7 @@ gpk_firmware_require_restart (GpkFirmware *firmware)
 	message = _("You will need to restart this computer before the hardware will work correctly.");
 
 	/* TRANSLATORS: title of libnotify bubble */
-	notification = notify_notification_new (_("Additional software was installed"), message, "help-browser", NULL);
+	notification = notify_notification_new (_("Additional software was installed"), message, NULL);
 	notify_notification_set_timeout (notification, NOTIFY_EXPIRES_NEVER);
 	notify_notification_set_urgency (notification, NOTIFY_URGENCY_LOW);
 
@@ -307,7 +302,7 @@ gpk_firmware_require_replug (GpkFirmware *firmware)
 	message = _("You will need to remove and then reinsert the hardware before it will work correctly.");
 
 	/* TRANSLATORS: title of libnotify bubble */
-	notification = notify_notification_new (_("Additional software was installed"), message, "help-browser", NULL);
+	notification = notify_notification_new (_("Additional software was installed"), message, NULL);
 	notify_notification_set_timeout (notification, NOTIFY_EXPIRES_NEVER);
 	notify_notification_set_urgency (notification, NOTIFY_URGENCY_LOW);
 
@@ -334,7 +329,7 @@ gpk_firmware_require_nothing (GpkFirmware *firmware)
 	message = _("Your hardware has been set up and is now ready to use.");
 
 	/* TRANSLATORS: title of libnotify bubble */
-	notification = notify_notification_new (_("Additional software was installed"), message, "help-browser", NULL);
+	notification = notify_notification_new (_("Additional software was installed"), message, NULL);
 	notify_notification_set_timeout (notification, NOTIFY_EXPIRES_NEVER);
 	notify_notification_set_urgency (notification, NOTIFY_URGENCY_LOW);
 
@@ -617,7 +611,7 @@ gpk_firmware_timeout_cb (gpointer data)
 	}
 
 	/* TRANSLATORS: title of libnotify bubble */
-	notification = notify_notification_new (_("Additional firmware required"), string->str, "help-browser", NULL);
+	notification = notify_notification_new (_("Additional firmware required"), string->str, NULL);
 	notify_notification_set_timeout (notification, NOTIFY_EXPIRES_NEVER);
 	notify_notification_set_urgency (notification, NOTIFY_URGENCY_LOW);
 	notify_notification_add_action (notification, "install-firmware",
diff --git a/src/gpk-hardware.c b/src/gpk-hardware.c
index 6fe7932..d8d7996 100644
--- a/src/gpk-hardware.c
+++ b/src/gpk-hardware.c
@@ -185,7 +181,7 @@ gpk_hardware_what_provides_cb (GObject *object, GAsyncResult *res, GpkHardware *
 	message = g_strdup_printf ("%s\n\t%s", _("Additional packages can be installed to support this hardware"), package);
 	/* TRANSLATORS: a new bit of hardware has been plugged in */
 	body = g_strdup_printf ("%s", _("New hardware attached"));
-	notification = notify_notification_new (body, message, "help-browser", NULL);
+	notification = notify_notification_new (body, message, NULL);
 	notify_notification_set_timeout (notification, NOTIFY_EXPIRES_NEVER);
 	notify_notification_set_urgency (notification, NOTIFY_URGENCY_LOW);
 	notify_notification_add_action (notification, GPK_HARDWARE_INSTALL_ACTION,
diff --git a/src/gpk-watch.c b/src/gpk-watch.c
index d40fe62..977282b 100644
--- a/src/gpk-watch.c
+++ b/src/gpk-watch.c
@@ -535,7 +531,7 @@ gpk_watch_process_messages_cb (PkMessage *item, GpkWatch *watch)
 	}
 
 	/* do the bubble */
-	notification = notify_notification_new_with_status_icon (gpk_message_enum_to_localised_text (type), details, "emblem-important", watch->priv->status_icon);
+	notification = notify_notification_new (gpk_message_enum_to_localised_text (type), details, "emblem-important");
 	notify_notification_set_timeout (notification, NOTIFY_EXPIRES_NEVER);
 	notify_notification_set_urgency (notification, NOTIFY_URGENCY_LOW);
 	ret = notify_notification_show (notification, &error);
@@ -598,7 +593,7 @@ gpk_watch_process_error_code (GpkWatch *watch, PkError *error_code)
 	title_prefix = g_strdup_printf ("%s: %s", _("Package Manager"), title);
 
 	/* do the bubble */
-	notification = notify_notification_new (title_prefix, message, "help-browser", NULL);
+	notification = notify_notification_new (title_prefix, message, NULL);
 	notify_notification_set_timeout (notification, 15000);
 	notify_notification_set_urgency (notification, NOTIFY_URGENCY_LOW);
 	notify_notification_add_action (notification, "show-error-details",
@@ -821,7 +814,7 @@ gpk_watch_adopt_cb (PkClient *client, GAsyncResult *res, GpkWatch *watch)
 		goto out;
 
 	/* TRANSLATORS: title: an action has finished, and we are showing the libnotify bubble */
-	notification = notify_notification_new (_("Task completed"), message, "help-browser", NULL);
+	notification = notify_notification_new (_("Task completed"), message, NULL);
 	notify_notification_set_timeout (notification, 5000);
 	notify_notification_set_urgency (notification, NOTIFY_URGENCY_LOW);
 	notify_notification_add_action (notification, "do-not-show-notify-complete",
--
cgit v0.8.3.4
