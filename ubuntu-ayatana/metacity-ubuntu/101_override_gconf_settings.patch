--- a/src/core/main.c
+++ b/src/core/main.c
@@ -235,6 +235,7 @@
   gboolean composite;
   gboolean no_composite;
   gboolean no_force_fullscreen;
+  gchar *conf_file;
 } MetaArguments;
 
 #ifdef HAVE_COMPOSITE_EXTENSIONS
@@ -322,6 +323,12 @@
       N_("Don't make fullscreen windows that are maximized and have no decorations"),
       NULL
     },
+    {
+      "conf-file", 0, 0, G_OPTION_ARG_FILENAME,
+      &my_args.conf_file,
+      N_("Options from the given configuration file have precedence over GConf ones"),
+      NULL
+    },
     {NULL}
   };
   GOptionContext *ctx;
@@ -491,7 +498,7 @@
   meta_errors_init ();
 
   /* Load prefs */
-  meta_prefs_init ();
+  meta_prefs_init (meta_args.conf_file);
   meta_prefs_add_listener (prefs_changed_callback, NULL);
 
 
@@ -571,6 +578,7 @@
   g_free (meta_args.save_file);
   g_free (meta_args.display_name);
   g_free (meta_args.client_id);
+  g_free (meta_args.conf_file);
 
   if (meta_args.composite || meta_args.no_composite)
     meta_prefs_set_compositing_manager (meta_args.composite);
--- a/src/core/prefs.c
+++ b/src/core/prefs.c
@@ -71,6 +71,8 @@
 static GList *changes = NULL;
 static guint changed_idle;
 static GList *listeners = NULL;
+static GKeyFile *key_file = NULL;
+static const gchar conf_file_group_name[] = "general";
 #endif
 
 static gboolean use_system_font = FALSE;
@@ -512,6 +514,43 @@
     { NULL, 0, NULL, 0, 0, 0, },
   };
 
+static gchar *
+conf_get_string (const gchar *key, GError **error)
+{
+  if (key_file != NULL)
+    {
+      gchar *value = g_key_file_get_string (key_file,
+                                            conf_file_group_name,
+                                            key,
+                                            NULL);
+      if (value != NULL)
+        return value;
+    }
+  return gconf_client_get_string (default_client,
+                                  key,
+                                  error);
+}
+
+static gint
+conf_get_int (const gchar *key, GError **error)
+{
+  if (key_file != NULL)
+    {
+      GError *key_error = NULL;
+      gint value = g_key_file_get_integer (key_file,
+                                           conf_file_group_name,
+                                           key,
+                                           &key_error);
+      if (key_error != NULL)
+        g_error_free (key_error);
+      else
+        return value;
+    }
+  return gconf_client_get_int (default_client,
+                               key,
+                               error);
+}
+
 static void
 handle_preference_init_enum (void)
 {
@@ -528,9 +567,8 @@
           continue;
         }
 
-      value = gconf_client_get_string (default_client,
-                                       cursor->key,
-                                       &error);
+      value = conf_get_string (cursor->key,
+                               &error);
       cleanup_error (&error);
 
       if (value==NULL)
@@ -579,9 +617,8 @@
       gboolean dummy = TRUE;
 
       /* the string "value" will be newly allocated */
-      value = gconf_client_get_string (default_client,
-                                       cursor->key,
-                                       &error);
+      value = conf_get_string (cursor->key,
+                               &error);
       cleanup_error (&error);
 
       if (cursor->handler)
@@ -616,9 +653,8 @@
       gint value;
       GError *error = NULL;
 
-      value = gconf_client_get_int (default_client,
-                                    cursor->key,
-                                    &error);
+      value = conf_get_int (cursor->key,
+                            &error);
       cleanup_error (&error);
 
       if (value < cursor->minimum || value > cursor->maximum)
@@ -1035,7 +1071,7 @@
 #endif
 
 void
-meta_prefs_init (void)
+meta_prefs_init (const gchar *conf_file)
 {
 #ifdef HAVE_GCONF
   GError *err = NULL;
@@ -1058,6 +1094,18 @@
       cleanup_error (&err);
     }
 
+  /* if a configuration file has been specified, settings written in that file
+   * will override those in GConf */
+  if (conf_file != NULL)
+    {
+      key_file = g_key_file_new ();
+      g_key_file_load_from_file (key_file,
+                                 conf_file,
+                                 G_KEY_FILE_NONE,
+                                 &err);
+      cleanup_error (&err);
+    }
+
   /* Pick up initial values. */
 
   handle_preference_init_enum ();
@@ -1240,6 +1288,22 @@
   GConfValue *value;
   gboolean    filled_in = FALSE;
 
+  if (key_file != NULL)
+    {
+      GError *key_error = NULL;
+      gboolean value = g_key_file_get_boolean (key_file,
+                                               conf_file_group_name,
+                                               key,
+                                               &key_error);
+      if (key_error != NULL)
+        g_error_free (key_error);
+      else
+        {
+          *val = value;
+          return TRUE;
+        }
+    }
+
   value = gconf_client_get (default_client, key, &err);
   cleanup_error (&err);
   if (value)
--- a/src/include/prefs.h
+++ b/src/include/prefs.h
@@ -77,7 +77,7 @@
 void meta_prefs_remove_listener (MetaPrefsChangedFunc func,
                                  gpointer             data);
 
-void meta_prefs_init (void);
+void meta_prefs_init (const gchar *conf_file);
 const char* meta_preference_to_string (MetaPreference pref);
 
 MetaVirtualModifier         meta_prefs_get_mouse_button_mods  (void);
