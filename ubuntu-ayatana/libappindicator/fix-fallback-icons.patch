=== modified file 'src/app-indicator.c'
--- src/app-indicator.c	2011-07-22 19:04:23 +0000
+++ src/app-indicator.c	2011-09-22 21:16:07 +0000
@@ -48,8 +48,6 @@
 #include "dbus-shared.h"
 #include "generate-id.h"
 
-#define PANEL_ICON_SUFFIX  "panel"
-
 /**
  * AppIndicatorPrivate:
  * All of the private data in an instance of an application indicator.
@@ -183,7 +181,6 @@
 static void status_icon_activate (GtkStatusIcon * icon, gpointer data);
 static void status_icon_menu_activate (GtkStatusIcon *status_icon, guint button, guint activate_time, gpointer user_data);
 static void unfallback (AppIndicator * self, GtkStatusIcon * status_icon);
-static gchar * append_panel_icon_suffix (const gchar * icon_name);
 static void watcher_owner_changed (GObject * obj, GParamSpec * pspec, gpointer user_data);
 static void theme_changed_cb (GtkIconTheme * theme, gpointer user_data);
 static void sec_activate_target_parent_changed(GtkWidget *menuitem, GtkWidget *old_parent, gpointer   user_data);
@@ -1521,30 +1518,26 @@
 status_icon_changes (AppIndicator * self, gpointer data)
 {
 	GtkStatusIcon * icon = GTK_STATUS_ICON(data);
-	gchar *longname = NULL;
+	const gchar *icon_name;
 
 	switch (app_indicator_get_status(self)) {
 	case APP_INDICATOR_STATUS_PASSIVE:
-		longname = append_panel_icon_suffix(app_indicator_get_icon(self));
+		icon_name = app_indicator_get_icon (self);
 		gtk_status_icon_set_visible(icon, FALSE);
-		gtk_status_icon_set_from_icon_name(icon, longname);
+		gtk_status_icon_set_from_icon_name(icon, icon_name);
 		break;
 	case APP_INDICATOR_STATUS_ACTIVE:
-		longname = append_panel_icon_suffix(app_indicator_get_icon(self));
-		gtk_status_icon_set_from_icon_name(icon, longname);
+		icon_name = app_indicator_get_icon (self);
+		gtk_status_icon_set_from_icon_name(icon, icon_name);
 		gtk_status_icon_set_visible(icon, TRUE);
 		break;
 	case APP_INDICATOR_STATUS_ATTENTION:
-		longname = append_panel_icon_suffix(app_indicator_get_attention_icon(self));
-		gtk_status_icon_set_from_icon_name(icon, longname);
+		icon_name = app_indicator_get_icon (self);
+		gtk_status_icon_set_from_icon_name(icon, icon_name);
 		gtk_status_icon_set_visible(icon, TRUE);
 		break;
 	};
 
-	if (longname) {
-		g_free(longname);
-	}
-
 	return;
 }
 
@@ -1590,23 +1583,6 @@
 	return;
 }
 
-/* A helper function that appends PANEL_ICON_SUFFIX to the given icon name
-   if it's missing. */
-static gchar *
-append_panel_icon_suffix (const gchar *icon_name)
-{
-	gchar * long_name = NULL;
-
-	if (!g_str_has_suffix (icon_name, PANEL_ICON_SUFFIX)) {
-		long_name =
-		    g_strdup_printf("%s-%s", icon_name, PANEL_ICON_SUFFIX);
-        } else {
-           	long_name = g_strdup (icon_name);
-        }
-
-	return long_name;	
-}
-
 static gboolean
 widget_is_menu_child(AppIndicator * self, GtkWidget *child)
 {

